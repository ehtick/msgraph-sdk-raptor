# Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
# Steps to run regular tests (that are expected to pass, i.e. no known failures)

steps:
- pwsh: |
    $regularTestDirectory = "RegularTests"
    mkdir $regularTestDirectory
  displayName: 'Create directories for test output'
  workingDirectory: $(Build.ArtifactStagingDirectory)

- pwsh: |
    $dllPath = (Get-ChildItem ./msgraph-sdk-dotnet/ -Include Microsoft.Graph.dll -Recurse | Where-Object { $_.FullName.Contains("netcoreapp") }).FullName
    Write-Host "Path to Microsoft.Graph.dll: $dllPath"

    & ./msgraph-sdk-raptor/azure-pipelines/e2e-templates/transformSettings.ps1 -Version "$(metadataVersion)" -KnownFailuresRequested "false" -DllPath "$dllPath" -Language "CSharp" -RunSettingsPath "$(runSettingsFile)"

    Write-Host "--- Test.runsettings file ---"
    Get-Content "$(runSettingsFile)"
    Write-Host "-----------------------------"
  displayName: 'Transform .runsettings file for passing tests'
  workingDirectory: '$(Build.SourcesDirectory)'

- task: DotNetCoreCLI@2
  displayName: 'Csharp Compilation Tests'
  inputs:
    command: 'test'
    projects: '**/CSharpArbitraryDllTests.csproj'
    arguments: '--configuration $(buildConfiguration) --logger trx --results-directory $(Build.ArtifactStagingDirectory)/RegularTests --settings $(runSettingsFile)'
    publishTestResults: false
  continueOnError: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish test results as artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/RegularTests'
    ArtifactName: 'RegularTests'
    publishLocation: 'Container'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'VSTest'
    searchFolder: '$(Build.ArtifactStagingDirectory)/RegularTests'
    testResultsFiles: '**/*.trx'
    testRunTitle: '[$(metadataVersion)] Raptor Regular Tests [Metadata:$(metadataURL)]'
  displayName: 'Publish Test Results for Regular Tests'